# To use the getters on a user, the following attribute headers must be used in the csv. getAttribute can be used to get the value for any header.
#uid, getUid;
#password, getPassword;
#email, getEmail;
#first name,getFirstName;
#last name, getLastName;
#language, getLanguage;
#display name, getDisplayName;
#Note that csv strings are not to be inside "". If you need to use the delimiter in a value, you have to choose a different delimiter.

#path to CSV file and file delimiter
#user_data_file_path = test_config/extensions/user/users.csv
user_data_file_path = test_config/extensions/user/amy_jones_users.csv
csv_delimiter = ,
config_delimiter = ;

#standard users settings. Standard users are all the ones left after moving out users to special_user_groups
standard_users.check_out = true
standard_users.timeout = 900000

#special user categories
special_user_groups = admin_users;global_mods;global_members;global_owner;global_editor;global_reader;exclusion_group;external_group;visitor_group;

#settings to identify users that belong to special user categories
#[special_user_group].attribute = The CSV header on which to query by identifier
#[special_user_group].identifiers = Will match all where users with an .attribute value that contains your specified identifier.
#[special_user_group].check_out = true or false - if users of this group will be checked out when fetched and therefore unavailable to other tests until they are checked back in.
#[special_user_group].timeout = The time (in milliseconds) to wait for a user to become available if they are all checked out.
#[special_user_group].ringfence = true or false - if users that are matched for this group should be removed from the standard users group, and therefore also unavailable to any groups loaded subsequently.

#admin group
admin_users.attribute = uid
admin_users.identifiers = ajones1
admin_users.check_out = false
admin_users.timeout = 900000
admin_users.ringfence = true

#global_mod_group
global_mods.attribute = uid
global_mods.identifiers = ajones2
global_mods.check_out = false
admin_users.timeout = 900000
global_mods.ringfence = true

#global_members_group
global_members.attribute = members
global_members.identifiers = ajones401;ajones402;ajones403;ajones404;
global_members.check_out = false
admin_users.timeout = 900000
global_members.ringfence = true

#global_members_group
global_owner.attribute = members
global_owner.identifiers = ajones451;
global_owner.check_out = false
global_owner.timeout = 900000
global_owner.ringfence = true

#global_members_group
global_editor.attribute = members
global_editor.identifiers = ajones452;
global_editor.check_out = false
global_editor.timeout = 900000
global_editor.ringfence = true

#global_members_group
global_reader.attribute = members
global_reader.identifiers = ajones453;
global_reader.check_out = false
global_reader.timeout = 900000
global_reader.ringfence = true

#global_members_group
exclusion_group.attribute = members
exclusion_group.identifiers = ajones3;ajones4;ajones5;
exclusion_group.check_out = false
exclusion_group.timeout = 900000
exclusion_group.ringfence = true

#global_members_group
external_group.attribute = members
external_group.identifiers = ajones479;ajones480;ajones481;ajones482;ajones483;ajones484;ajones485;ajones486;ajones487;ajones488;ajones489;
external_group.check_out = false
external_group.timeout = 900000
external_group.ringfence = true

#visitor_group
visitor_group.attribute = members
visitor_group.identifiers = ajones490;ajones491;ajones492;ajones493;ajones494;ajones495;ajones496;ajones497;ajones498;ajones499;
visitor_group.check_out = false
visitor_group.timeout = 900000
visitor_group.ringfence = true