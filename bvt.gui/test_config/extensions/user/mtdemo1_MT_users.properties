# To use the getters on a user, the following attribute headers must be used in the csv. getAttribute can be used to get the value for any header.
#uid, getUid;
#password, getPassword;
#email, getEmail;
#first name,getFirstName;
#last name, getLastName;
#language, getLanguage;
#display name, getDisplayName;
#Note that csv strings are not to be inside "". If you need to use the delimiter in a value, you have to choose a different delimiter.

#path to CSV file and file delimiter
user_data_file_path = test_config/extensions/user/mtdemo1_MT_users.csv
csv_delimiter = ,
config_delimiter = ;

#standard users settings. Standard users are all the ones left after moving out users to special_user_groups
standard_users.check_out = true
standard_users.timeout = 900000

#special user categories
special_user_groups = admin_users;global_mods;global_members;global_owner;global_editor;global_reader;exclusion_group;search_admin_users;orga;orgb;external_users_orga;external_users_orgb;

#settings to identify users that belong to special user categories
#[special_user_group].attribute = The CSV header on which to query by identifier
#[special_user_group].identifiers = Will match all where users with an .attribute value that contains your specified identifier.
#[special_user_group].check_out = true or false - if users of this group will be checked out when fetched and therefore unavailable to other tests until they are checked back in.
#[special_user_group].timeout = The time (in milliseconds) to wait for a user to become available if they are all checked out.
#[special_user_group].ringfence = true or false - if users that are matched for this group should be removed from the standard users group, and therefore also unavailable to any groups loaded subsequently.

#admin group
admin_users.attribute = uid
admin_users.identifiers = wasadmin
admin_users.check_out = false
admin_users.timeout = 900000
admin_users.ringfence = true

#search admin group
search_admin_users.attribute = uid
search_admin_users.identifiers = jadams1
search_admin_users.check_out = false
search_admin_users.timeout = 900000
search_admin_users.ringfence = true

#external user orgc
external_users_orga.attribute = members
external_users_orga.identifiers = external_orgc
external_users_orga.check_out = false
external_users_orga.timeout = 900000
external_users_orga.ringfence = true

#external user orgd
external_users_orgb.attribute = members
external_users_orgb.identifiers = external_orgd
external_users_orgb.check_out = false
external_users_orgb.timeout = 900000
external_users_orgb.ringfence = true

#global_mod_group
global_mods.attribute = uid
global_mods.identifiers = ajones3
global_mods.check_out = false
admin_users.timeout = 900000
global_mods.ringfence = true

#global_members_group
global_members.attribute = members
global_members.identifiers = ajones101;ajones102;ajones103;ajones104;
global_members.check_out = false
admin_users.timeout = 900000
global_members.ringfence = true

#global_members_group
global_owner.attribute = members
global_owner.identifiers = ajones112;
global_owner.check_out = false
global_owner.timeout = 900000
global_owner.ringfence = true

#global_members_group
global_editor.attribute = members
global_editor.identifiers = ajones111;
global_editor.check_out = false
global_editor.timeout = 900000
global_editor.ringfence = true

#global_members_group
global_reader.attribute = members
global_reader.identifiers = ajones113;
global_reader.check_out = false
global_reader.timeout = 900000
global_reader.ringfence = true

#global_members_group
exclusion_group.attribute = members
exclusion_group.identifiers = ajones3;ajones4;ajones5;
exclusion_group.check_out = false
exclusion_group.timeout = 900000
exclusion_group.ringfence = true

#orga
orga.attribute = members
orga.identifiers = orgc;
orga.check_out = false
orga.timeout = 900000
orga.ringfence = true

#orgb
orgb.attribute = members
orgb.identifiers = orgd;
orgb.check_out = false
orgb.timeout = 900000
orgb.ringfence = true
